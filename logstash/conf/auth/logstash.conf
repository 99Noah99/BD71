# input {
#     file {
#         path => "/usr/share/logstash/input/auth.log"
#         start_position => "beginning"
#         sincedb_path => "/dev/null"
#     }
# }

# filter {
#     grok {
#         match => {
#         "message" => ["%{SYSLOGTIMESTAMP:date} %{HOSTNAME:machine} %{WORD:programme} \[%{INT:pid}\] : %{GREEDYDATA:contenu}"]
#         }
#     }
#     mutate {
#         convert => {
#         "pid" => "integer"
#         }
#     }
#     date {
#         match => [ "date", "MMM d HH:mm:ss", "MMM dd HH:mm:ss" ]
#         target => "date"
#     } 
# }

# output {
#     file {
#         path => "/usr/share/logstash/output/auth-transforme.log"
#         codec =>rubydebug
#     }
# }


input {
    file {
        path => "/usr/share/logstash/input/auth.log"
        start_position => "beginning"
        sincedb_path => "/dev/null" # Linux
    }
}

filter {
    grok {
        match => {
            "message" => [
                # Pattern avec PID
                "%{SYSLOGTIMESTAMP:date} %{HOSTNAME:machine} %{WORD:programme}\\[%{INT:pid}\\]: %{GREEDYDATA:contenu}",
                # Pattern sans PID
                "%{SYSLOGTIMESTAMP:date} %{HOSTNAME:machine} %{WORD:programme}: %{GREEDYDATA:contenu}"
            ]
        }
    }

    mutate {
        convert => { "pid" => "integer" }
    }

    date {
        match => [ "date", "MMM d HH:mm:ss", "MMM dd HH:mm:ss" ]
        target => "date"
    }
}

output {
    file {
        path => "/usr/share/logstash/output/auth-transforme.log"
        codec => rubydebug
    }
}
