input {
    file {
        path => "/usr/share/logstash/input/auth.log"
        start_position => "beginning"
        sincedb_path => "/dev/null"
        codec => multiline {
            pattern => "^\s"  # Regroupe les lignes qui commencent par un espace
            what => "previous" # Attache les lignes suivantes à la précédente
        }
    }
}

filter {
  
  grok {
    match => { "message" => "%{IPORHOST:clientip} %{HTTPDUSER:ident} %{HTTPDUSER:auth} \[%{HTTPDATE:timestamp}\] \"%{WORD:verb} %{NOTSPACE:request} HTTP/%{NUMBER:httpversion}\" %{NUMBER:response:int} (?:-|%{NUMBER:bytes:int}) %{QS:referrer} %{QS:agent}" }
  }

  date {
    match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
    target => "timestamp"
  }

  mutate {
    convert => {
      "httpversion" => "float"
      "response" => "integer"
      "bytes" => "integer"
    }
    remove_field => ["timestamp"]
  }
}

output {
    file {
        path => "/usr/share/logstash/output/auth-transforme.log"
        codec =>rubydebug
    }
}